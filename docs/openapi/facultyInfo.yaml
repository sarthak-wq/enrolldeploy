openapi: 3.0.1
info:
  title: Faculty Management API
  description: API for managing faculty members and their course offerings.
  version: 1.0.0
servers:
  - url: https://api.universitysystem.com/v1
    description: Main API server

paths:
  /faculty:
    get:
      summary: Get a list of all faculty members
      operationId: getFacultyList
      tags:
        - Faculty
      responses:
        '200':
          description: A list of faculty members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faculty'
              example:
                - id: "12345"
                  firstName: "Trivikram"
                  lastName: "Budhabhatti"
                  coursesTaught: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 500
                message: "Internal Server Error"
                description: "An unexpected error occurred while processing the request."

  /faculty/{facultyId}:
    get:
      summary: Get details of a specific faculty member
      operationId: getFacultyDetails
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
          example: "12345"
      responses:
        '200':
          description: Faculty details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
              example:
                id: "12345"
                firstName: "Trivikram"
                lastName: "Budhabhatti"
                coursesTaught: []
        '404':
          description: Faculty not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Not Found"
                description: "The requested faculty member was not found."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 500
                message: "Internal Server Error"
                description: "An unexpected error occurred while processing the request."

  /faculty/{facultyId}/courses:
    get:
      summary: Get courses taught by a faculty member
      operationId: getFacultyCourses
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
          example: "12345"
      responses:
        '200':
          description: List of courses taught by the faculty
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseOffer'
              example:
                - course:
                    name: "Advanced Computer Science"
                    courseCode: "CS404"
                  term:
                    year: 2024
                    semester: "SPRING"
                  instructor: "Trivikram Budhabhatti"
                  maxSeats: 50
                  currentSeats: 25
        '404':
          description: Faculty not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Not Found"
                description: "The requested faculty member does not have any courses or the faculty ID is invalid."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 500
                message: "Internal Server Error"
                description: "An unexpected error occurred while processing the request."

    post:
      summary: Add a course to the list of courses taught by a faculty member
      operationId: addFacultyCourse
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
          example: "12345"
      requestBody:
        description: CourseOffer object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseOffer'
            example:
              course:
                name: "Data Structures"
                courseCode: "CS101"
              term:
                year: 2024
                semester: "SUMMER"
              instructor: "Trivikram Budhabhatti"
              maxSeats: 60
              currentSeats: 30
      responses:
        '201':
          description: Course added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseOffer'
              example:
                course:
                  name: "Data Structures"
                  courseCode: "CS101"
                term:
                  year: 2024
                  semester: "SUMMER"
                instructor: "Trivikram Budhabhatti"
                maxSeats: 60
                currentSeats: 30
        '404':
          description: Faculty not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Not Found"
                description: "Faculty member not found in the system."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 500
                message: "Internal Server Error"
                description: "An unexpected error occurred while processing the request."

  /faculty/{facultyId}/courses/{courseOfferId}:
    patch:
      summary: Update details of a specific course taught by a faculty member
      operationId: updateFacultyCourse
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
          example: "12345"
        - name: courseOfferId
          in: path
          required: true
          schema:
            type: string
          example: "67890"
      requestBody:
        description: CourseOffer fields to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instructor:
                  type: string
                maxSeats:
                  type: integer
                currentSeats:
                  type: integer
                term:
                  type: object
                  description: "The term during which the course is offered (Spring, Summer, Fall)"
            example:
              instructor: "Trivikram Budhabhatti"
              maxSeats: 50
              currentSeats: 25
              term: {
                "year": 2024,
                "semester": "FALL"
              }
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseOffer'
              example:
                course:
                  name: "Advanced Computer Science"
                  courseCode: "CS404"
                term:
                  year: 2024
                  semester: "FALL"
                instructor: "Trivikram Budhabhatti"
                maxSeats: 50
                currentSeats: 25
        '400':
          description: Invalid request body or missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: "Bad Request"
                description: "The request body is invalid or missing required fields."
        '404':
          description: Faculty or Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Not Found"
                description: "Either the faculty member or the course ID does not exist."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 500
                message: "Internal Server Error"
                description: "An unexpected error occurred while processing the request."

  # /faculty/{facultyId}/courses/{courseOfferId}/students:
  #   get:
  #     summary: Get students registered in a specific course taught by a faculty member
  #     operationId: getCourseStudents
  #     tags:
  #       - Faculty
  #     parameters:
  #       - name: facultyId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #         example: "12345"
  #       - name: courseOfferId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #         example: "67890"
  #     responses:
  #       '200':
  #         description: List of registered students
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Student'
  #             example:
  #               - id: "student001"
  #                 firstName: "John"
  #                 lastName: "Doe"
  #               - id: "student002"
  #                 firstName: "Jane"
  #                 lastName: "Smith"
  #       '404':
  #         description: Faculty or Course not found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #             example:
  #               code: 404
  #               message: "Not Found"
  #               description: "Faculty or course not found."
  #       '500':
  #         description: Internal server error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #             example:
  #               code: 500
  #               message: "Internal Server Error"
  #               description: "An unexpected error occurred while processing the request."

  /faculty/{facultyId}/courses/{courseOfferId}/edit:
    patch:
      summary: Allow a professor to edit their own course details
      operationId: editFacultyCourse
      description: Allows a professor to update details of a specific course they are assigned to teach, including the course term.
      tags:
        - Faculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
          example: "12345"
        - name: courseOfferId
          in: path
          required: true
          schema:
            type: string
          example: "67890"
      requestBody:
        description: Fields of the course to be updated by the professor
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instructor:
                  type: string
                  description: Name of the instructor (usually the professor)
                maxSeats:
                  type: integer
                  description: Maximum number of seats available in the course
                currentSeats:
                  type: integer
                  description: Current number of seats filled in the course
                courseName:
                  type: string
                  description: Course Name
                courseDetails:
                  type: string
                  description: Additional information or details about the course
                term:
                  type: object
                  description: Term when the course is offered (Spring, Summer, or Fall)
            example:
              instructor: "Trivikram Budhabhatti"
              maxSeats: 60
              currentSeats: 30
              courseName: "Data Structures"
              courseDetails: "Learn about data structures and algorithms."
              term: {
                "year": 2024,
                "semester": "FALL"
              }
      responses:
        '200':
          description: Course details updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseOffer'
              example:
                course:
                  name: "Data Structures"
                  courseCode: "CS101"
                term:
                  year: 2024
                  semester: "FALL"
                instructor: "Trivikram Budhabhatti"
                maxSeats: 60
                currentSeats: 30
        '400':
          description: Invalid request or unauthorized attempt to edit course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: "Bad Request"
                description: "The provided data is invalid or not authorized for the current faculty member."
        '401':
          description: Unauthorized attempt to edit course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 401
                message: "Unauthorized"
                description: "You do not have permission to modify this course."
        '404':
          description: Faculty or Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Not Found"
                description: "Faculty member or course could not be found."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 500
                message: "Internal Server Error"
                description: "An unexpected error occurred while processing the request."

components:
  schemas:
    Faculty:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the faculty member
          example: "12345"
        firstName:
          type: string
          description: First name of the faculty member
          example: "Trivikram"
        lastName:
          type: string
          description: Last name of the faculty member
          example: "Budhabhatti"
        coursesTaught:
          type: array
          items:
            $ref: '#/components/schemas/CourseOffer'

    CourseOffer:
      type: object
      properties:
        course:
          $ref: '#/components/schemas/Course'
        term:
          $ref: '#/components/schemas/Term'
        instructor:
          type: string
          description: Instructor for the course
          example: "Trivikram Budhabhatti"
        maxSeats:
          type: integer
          description: Maximum number of seats available in the course
          example: 60
        currentSeats:
          type: integer
          description: Current number of seats filled in the course
          example: 30

    Course:
      type: object
      properties:
        name:
          type: string
          description: Name of the course
          example: "Data Structures"
        courseCode:
          type: string
          description: Unique code for the course
          example: "CS101"
        prerequisites:
          type: array
          items:
            $ref: '#/components/schemas/Course'
          description: A list of prerequisite courses for this course

    Term:
      type: object
      properties:
        year:
          type: integer
          description: Year the course is offered
          example: 2024
        semester:
          type: string
          enum:
            - SPRING
            - SUMMER
            - FALL
          description: Semester the course is offered
          example: "FALL"

    Student:
      type: object
      properties:
        id:
          type: string
          description: Unique student identifier
          example: "student001"
        firstName:
          type: string
          description: Student's first name
          example: "John"
        lastName:
          type: string
          description: Student's last name
          example: "Doe"

    Error:
      type: object
      properties:
        code:
          type: integer
          description: The HTTP status code associated with the error
          example: 400
        message:
          type: string
          description: A brief message about the error
          example: "Bad Request"
        description:
          type: string
          description: Detailed description of the error
          example: "The provided data is invalid or not authorized for the current faculty member."
